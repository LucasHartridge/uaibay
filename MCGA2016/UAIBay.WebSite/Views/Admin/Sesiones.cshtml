
@{
    ViewBag.Title = "Sesiones";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Sesiones</h2>
<br />
<div id="embed-api-auth-container"></div>
<br />
<div id="chart-container"></div>
<br />
<div id="view-selector-container"></div>

@* SCRIPT PARA LLAMAR A LA API DE ANALYTICS *@
<script>
    (function (w, d, s, g, js, fs) {
        g = w.gapi || (w.gapi = {}); g.analytics = { q: [], ready: function (f) { this.q.push(f); } };
        js = d.createElement(s); fs = d.getElementsByTagName(s)[0];
        js.src = 'https://apis.google.com/js/platform.js';
        fs.parentNode.insertBefore(js, fs); js.onload = function () { g.load('analytics'); };
    }(window, document, 'script'));
</script>




@* SCRIPT PARA ARMAR EL GRAFICO DE DE ANALYTICS *@
<script>
    gapi.analytics.ready(function drawChart() {

        /**
         * Authorize the user immediately if the user has already granted access.
         * If no access has been created, render an authorize button inside the
         * element with the ID "embed-api-auth-container".
         */
        gapi.analytics.auth.authorize({
            container: 'embed-api-auth-container',
            clientid: '1005751249121-rlhr9u3iavg6uk73suc5t3nko8o1ur4s.apps.googleusercontent.com'

        });


        /**
         * Create a new ViewSelector instance to be rendered inside of an
         * element with the id "view-selector-container".
         */
        var viewSelector = new gapi.analytics.ViewSelector({
            container: 'view-selector-container'
        });

        // Render the view selector to the page.
        viewSelector.execute();


        /**
         * Create a new DataChart instance with the given query parameters
         * and Google chart options. It will be rendered inside an element
         * with the id "chart-container".
         */
        
        var dataChart = new gapi.analytics.googleCharts.DataChart({
            query: {
                metrics: 'ga:sessions',
                dimensions: 'ga:date',
                'start-date': '10daysAgo',
                'end-date': 'today'
            },
            chart: {
                container: 'chart-container',
                type: 'LINE',
                options: {
                    width: '100%'
                }
            }
        });

        window.addEventListener('resize', function () {
            dataChart.execute();
        });

        /**
         * Render the dataChart on the page whenever a new view is selected.
         */
        viewSelector.on('change', function (ids) {
            dataChart.set({ query: { ids: ids } }).execute();
        });

    });

</script>

